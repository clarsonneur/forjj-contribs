// This file is autogenerated by "go generate". Do not modify it.
// It has been generated from your 'jenkins.yaml' file.
// To update those structure, update the 'jenkins.yaml' and run 'go generate'
package main

// Object app groups structure

type DockerfileStruct struct {
	FromImage string `json:"dockerfile-from-image"`
	FromImageVersion string `json:"dockerfile-from-image-version"`
	Maintainer string `json:"dockerfile-maintainer"`
}

// Action groups structure
type FinalImageStruct struct {
	Name string `json:"final-image-name"`
	RegistryRepoName string `json:"final-image-registry-repo-name"`
	RegistryServer string `json:"final-image-registry-server"`
	Version string `json:"final-image-version"`
}

// Action groups structure

type AddDockerfileStruct struct {
	FromImage string `json:"dockerfile-from-image"`
	FromImageVersion string `json:"dockerfile-from-image-version"`
	Maintainer string `json:"dockerfile-maintainer"`
}


type AddFinalImageStruct struct {
	Name string `json:"final-image-name"`
	RegistryRepoName string `json:"final-image-registry-repo-name"`
	RegistryServer string `json:"final-image-registry-server"`
	Version string `json:"final-image-version"`
}


type ChangeDockerfileStruct struct {
	FromImage string `json:"dockerfile-from-image"`
	FromImageVersion string `json:"dockerfile-from-image-version"`
	Maintainer string `json:"dockerfile-maintainer"`
}


type ChangeFinalImageStruct struct {
	Name string `json:"final-image-name"`
	RegistryRepoName string `json:"final-image-registry-repo-name"`
	RegistryServer string `json:"final-image-registry-server"`
	Version string `json:"final-image-version"`
}


// Object Instance structures

type AppInstanceStruct struct {
	Add AppAddStruct
	Change AppChangeStruct
}

// Object instance Action structures

type AppAddStruct struct {
	DeployTo string `json:"deploy-to"`// Deployment name used to deploy jenkins.
	RegistryAuth string `json:"registry-auth"`// List of Docker registry servers authentication formatted as '<server1>:<cred>[,...]'. <cred> is 'user:pwd' in base64.

	// Groups

	AddDockerfileStruct
	AddFinalImageStruct
}

type AppChangeStruct struct {
	DeployTo string `json:"deploy-to"`// Deployment name used to deploy jenkins.
	RegistryAuth string `json:"registry-auth"`// List of Docker registry servers authentication formatted as '<server1>:<cred>[,...]'. <cred> is 'user:pwd' in base64.

	// Groups

	ChangeDockerfileStruct
	ChangeFinalImageStruct
}

// Object deployment groups structure

type DeployStruct struct {
	DeployTo string `json:"deploy-deploy-to"`
	Name string `json:"deploy-name"`
	ServiceAddr string `json:"deploy-service-addr"`
	ServicePort string `json:"deploy-service-port"`
}

// Action groups structure

type AddDeployStruct struct {
	DeployTo string `json:"deploy-deploy-to"`
	Name string `json:"deploy-name"`
	ServiceAddr string `json:"deploy-service-addr"`
	ServicePort string `json:"deploy-service-port"`
}


type ChangeDeployStruct struct {
	DeployTo string `json:"deploy-deploy-to"`
	Name string `json:"deploy-name"`
	ServiceAddr string `json:"deploy-service-addr"`
	ServicePort string `json:"deploy-service-port"`
}


type ListDeployStruct struct {
	DeployTo string `json:"deploy-deploy-to"`
	Name string `json:"deploy-name"`
	ServiceAddr string `json:"deploy-service-addr"`
	ServicePort string `json:"deploy-service-port"`
}


type RemoveDeployStruct struct {
	DeployTo string `json:"deploy-deploy-to"`
	Name string `json:"deploy-name"`
	ServiceAddr string `json:"deploy-service-addr"`
	ServicePort string `json:"deploy-service-port"`
}


// Object Instance structures

type DeploymentInstanceStruct struct {
	Add DeploymentAddStruct
	Change DeploymentChangeStruct
	List DeploymentListStruct
	Remove DeploymentRemoveStruct
}

// Object instance Action structures

type DeploymentAddStruct struct {

	// Groups

	AddDeployStruct
}

type DeploymentChangeStruct struct {

	// Groups

	ChangeDeployStruct
}

type DeploymentListStruct struct {

	// Groups

	ListDeployStruct
}

type DeploymentRemoveStruct struct {

	// Groups

	RemoveDeployStruct
}

// Object features groups structure


// Object Instance structures

type FeaturesInstanceStruct struct {
	Add FeaturesAddStruct
	Change FeaturesChangeStruct
	Remove FeaturesRemoveStruct
}

// Object instance Action structures

type FeaturesAddStruct struct {
	Name string `json:"name"`// name of the jenkins feature
	Options string `json:"options"`// List of feature option to use
}

type FeaturesChangeStruct struct {
	Name string `json:"name"`// name of the jenkins feature
	Options string `json:"options"`// List of feature option to use
}

type FeaturesRemoveStruct struct {
	Name string `json:"name"`// name of the jenkins feature
	Options string `json:"options"`// List of feature option to use
}


// ************************
// Create request structure
// ************************

type CreateReq struct {
	Forj struct {
		Debug string `json:"debug"`
		ForjjInfra string `json:"forjj-infra"`
		ForjjInstanceName string `json:"forjj-instance-name"`
		ForjjOrganization string `json:"forjj-organization"`
		ForjjSourceMount string `json:"forjj-source-mount"`
	}
	Objects CreateArgReq
}

type CreateArgReq struct {
	App map[string]AppInstanceStruct `json:"app"` // Object details
	Deployment map[string]DeploymentInstanceStruct `json:"deployment"` // Object details
	Features map[string]FeaturesInstanceStruct `json:"features"` // Object details
}

// ************************
// Update request structure
// ************************

type UpdateReq struct {
	Forj struct {
		Debug string `json:"debug"`
		ForjjInfra string `json:"forjj-infra"`
		ForjjInstanceName string `json:"forjj-instance-name"`
		ForjjOrganization string `json:"forjj-organization"`
		ForjjSourceMount string `json:"forjj-source-mount"`
	}
	Objects UpdateArgReq
}

type UpdateArgReq struct {
	App map[string]AppInstanceStruct `json:"app"` // Object details
	Deployment map[string]DeploymentInstanceStruct `json:"deployment"` // Object details
	Features map[string]FeaturesInstanceStruct `json:"features"` // Object details
}

// **************************
// Maintain request structure
// **************************

type MaintainReq struct {
	Forj struct {
		Debug string `json:"debug"`
		ForjjInfra string `json:"forjj-infra"`
		ForjjInstanceName string `json:"forjj-instance-name"`
		ForjjOrganization string `json:"forjj-organization"`
		ForjjSourceMount string `json:"forjj-source-mount"`
		DeployTo string `json:"deploy-to"`
	}
	Objects MaintainArgReq
}

type MaintainArgReq struct {
	App map[string]AppMaintainStruct `json:"app"` // Object details
}

type AppMaintainStruct struct {
	Setup struct {
		RegistryAuth string `json:"registry-auth"` // List of Docker registry servers authentication formatted as '<server1>:<cred>[,...]'. <cred> is 'user:pwd' in base64.
	}
}


// YamlDesc has been created from your 'jenkins.yaml' file.
const YamlDesc = "---\n" +
   "plugin: \"jenkins\"\n" +
   "version: \"0.1\"\n" +
   "description: \"CI jenkins plugin for FORJJ.\"\n" +
   "runtime:\n" +
   "  docker:\n" +
   "    image: \"hub.docker.hpecorp.net/devops/forjj-jenkins\"\n" +
   "    dood: true\n" +
   "  service_type: \"REST API\"\n" +
   "  service:\n" +
   "    #socket: \"jenkins.sock\"\n" +
   "    parameters: [ \"service\", \"start\", \"--templates\", \"/templates\"]\n" +
   "created_flag_file: \"{{ .InstanceName }}/forjj-{{ .Name }}.yaml\"\n" +
   "task_flags:\n" +
   "  common:\n" +
   "    forjj-infra:\n" +
   "      help: \"Name of the Infra repository to use\"\n" +
   "    forjj-instance-name:\n" +
   "    forjj-source-mount:\n" +
   "    forjj-organization:\n" +
   "    debug:\n" +
   "      help: \"To activate jenkins debug information\"\n" +
   "    forjj-source-mount:\n" +
   "      help: \"Where the source dir is located for jenkins plugin.\"\n" +
   "  maintain:\n" +
   "    deploy-to:\n" +
   "      default: docker\n" +
   "      help: \"Where jenkins will be published.\"\n" +
   "objects:\n" +
   "  deployment:\n" +
   "    on-tasks:\n" +
   "      create:\n" +
   "        list:\n" +
   "          to_create:\n" +
   "          separator: \",\"\n" +
   "          fields: \"name:service-addr[:service-port]\"\n" +
   "          help: \"One or more deployments\"\n" +
   "          action: add\n" +
   "    default-actions: [\"add\", \"change\", \"remove\", \"list\"]\n" +
   "    identified-by-flag: name\n" +
   "    groups:\n" +
   "      deploy:\n" +
   "        flags:\n" +
   "          service-addr:\n" +
   "            help: \"Exposed service CNAME or IP address of the expected jenkins instance\"\n" +
   "          service-port:\n" +
   "            default: 8080\n" +
   "            help: \"Expected jenkins instance port number.\"\n" +
   "          name:\n" +
   "            required: true\n" +
   "            help: \"Name of the jenkins deployment\"\n" +
   "          deploy-to:\n" +
   "            help: \"Where jenkins will be deployed.\"\n" +
   "  app:\n" +
   "    default-actions: [\"add\", \"change\"]\n" +
   "    groups:\n" +
   "      dockerfile:\n" +
   "        flags:\n" +
   "          # Information we can define for the Dockerfile.\n" +
   "          from-image:\n" +
   "            help: \"Base Docker image tag name to use in Dockerfile. Must respect [server/repo/]name.\"\n" +
   "            default: hub.docker.hpecorp.net/devops/jenkins-dood\n" +
   "          from-image-version:\n" +
   "            help: \"Base Docker image tag version to use in Dockerfile\"\n" +
   "          maintainer:\n" +
   "            help: \"Jenkins image maintainer\"\n" +
   "      final-image:\n" +
   "        flags:\n" +
   "          name:\n" +
   "            help: \"Docker image name for your final generated Jenkins Image. Do not set the Server or Repo name. Use final-docker-registry-server and final-docker-repo-name.\"\n" +
   "            default: jenkins\n" +
   "            group: \"final-image\"\n" +
   "          version:\n" +
   "            help: \"Docker image tag version for your generated Jenkins Image.\"\n" +
   "          registry-server:\n" +
   "            help: \"Docker registry server name where your image will be pushed. If not set, no push will be done.\"\n" +
   "            default: hub.docker.hpecorp.net\n" +
   "          registry-repo-name:\n" +
   "            help: \"Docker Repository Name where your image will be pushed. If not set, no push will be done.\"\n" +
   "    flags:\n" +
   "      registry-auth:\n" +
   "        help: \"List of Docker registry servers authentication formatted as '<server1>:<cred>[,...]'. <cred> is 'user:pwd' in base64.\"\n" +
   "        secure: true\n" +
   "        envar: \"REGISTRY_AUTH\"\n" +
   "      deploy-to:\n" +
   "        help: \"Deployment name used to deploy jenkins.\"\n" +
   "        default: \"docker\"\n" +
   "  features:\n" +
   "    default-actions: [\"add\", \"change\", \"remove\"]\n" +
   "    identified_by_flag: name\n" +
   "    flags:\n" +
   "      name:\n" +
   "        help: \"name of the jenkins feature\"\n" +
   "        required: true\n" +
   "      options:\n" +
   "        help: \"List of feature option to use\"\n" +
   ""
